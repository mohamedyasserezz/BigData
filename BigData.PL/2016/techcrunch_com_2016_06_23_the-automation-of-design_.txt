The automation of design

Murphy’s Law decrees: “Anything that can go wrong, will go wrong.” For any of us whose livelihood depends on our labor, things going wrong could mean: “Anything that can be automated, will be automated.”

Our labor or skill in exchange for pay has undoubtedly caused us to seek security in the notion that we’ll be forever needed. And yet time has shown that our ingenuity for efficiency orchestrates our removal from all forms of repetitive tasks. Energy and mechanization brought us from our fields into cities near factories, and in the past decades into offices behind our monitors. Engineers are even rendering themselves obsolete by automating the very thing they are critical for: thinking and making things.

From automated software delivery, to self-modifying code, to self-assembling robots, will we be needed still? We’ve designed our environments and every object with which we interact by being creative and imaginative. Surely this could not be automated, right? We couldn’t possibly be replaced in this function. As a designer of enterprise software for DevOps automation, I’ve ventured to wonder, could automation do what I do? Can I design my own obsolescence?

In his articleWhy Web Design is Dead, Latin American designer Sergio Nouvel explained the death of web design from the evolution of “high quality templates, mature design patterns, automation, and AI (…).” His conclusion, as I understood it, assured the continued existence of experience design because cohesively defining the experience comes from deliberate conceptualization. I agree with his view, as it seems we cannot automate the process of imagining what we want to experience.

Homing in on automation and AI, there are two recent examples that substantiate that we’re heading toward having a layer of automation to remove a facet of design labor: visual layout. The pleasing harmony of structural elements, supporting elements, their positioning, their dimensions, their alignment, their hierarchy, their context and their color palette, all have long been the distinction of the skilled designer who brings the human intangible of aesthetic.

Or is it the reverse? Maybe it is not us who create an aesthetic, but instead evolution has conditioned us to mimic nature’s patterns: symmetry, ratios, shapes and colors. If this is true, then through defined parameters, AI could learn these patterns and, as a designer would, explore design possibilities until user responses confirm a satisfying resting point.

A San Francisco startup,The Grid, offers “websites that design themselves,” with their AI-driven layouts that organize and evolve the display of content by analyzing media, even adjusting color palettes and typography. Basically, their AI is making the decisions of a visual designer. However, a human learns to make decisions from purpose, passion, dedication and education. The Grid’s layout engine has alleviated a significant portion of the design labor, but the main ingredient of the outcome is still human: enjoyment and emotion.

This past May, top honors at theTechCrunch Disrupt New York 2016 Hackathon went to AlexaSite, a solution that enables the update of website design using voice commands. Their leading use case is for web designers modifying layout using immediate feedback during meetings with customers. I promptly wondered, what if it wasn’t a professional designer talking? What if it’s a person willing to take the time to look at a template and instruct alterations?

The iterative process would require no technical skill and soon enough a result would satisfy aesthetic sensibilities. As with numerous other industries, technology will have democratized specialized skills, cutting out middlemen and making it possible for non-initiates to the profession to develop a minimum of expertise to produce a satisfying outcome.

In both these cases, AI and automation have demystified producing the design deliverable. The skill to go from conception to delivery has removed the visual designer as the gatekeeper and owner of the process. This is precisely where we come full circle to our initial insecurity: the fear of no longer being needed.

Thinking our foothold resides in making decisions that are too complex for algorithms to expropriate them from us, the frontier that automation cannot cross into is where experience design requires team collaboration, creativity, financial imperatives, company culture, engineering ability and market objectives. AI and automation could not possibly take on all these variables — but how far could both go?

UX design informed by business intelligence is not beyond AI and automation’s reach. The portion we might think is clearly within the boundaries of our creative synthesis is interaction design, where architecture, frameworks and iterations from feedback and validation shape an evolving user experience.

Back in 1999 I was having a conversation with a colleague with whom I imagined an organic UI. We were defining a user interface that changed itself in step with the increasing knowledge of the individual user. Users would enjoy tailored experiences of the product corresponding to their increasing abilities. The product would have DNA, so to speak, which would enable it to change within the parameters of an evolutionary framework. Is this not where UX practices have led us today?

Now, in collaboration with product management and engineers, I’m designing an enterprise software solution for Application Release Automation that helps DevOps teams work toward the continuous delivery of their software. As teams and I have been designing for automation, I often peer into the future, wondering what portion of information architecture, workflows and interaction design could be automated to produce an outcome comparable to what we’ve achieved so far.

Again the reference to DNA comes to mind. What if we could parameterize the workflows, the UI patterns and the visual language we’ve developed to define the user experience. The labor in a design cycle resides in the many iterations to explore workflows and patterns that lead to the validation that our user’s needs are met. Within defined workflows and UI patterns, AI would power through iterations and present multiple viable options in a fraction of time. Next, it would push the options out to user testers, log the behaviors and determine through analytics which idea is best.

The labor that follows in the hand-off of wireframes and specs for the engineering team would be entirely optimized into implementation engines that produce flawless and exact UI layout and behavior. The entire quality assurance process would in turn be optimized by meeting minimum acceptance criteria, thus entirely eliminating human error. This frictionless path would likely foster peace and harmony between teams never before dreamed of.

This concept of automation in a UX design cycle seeks to mimic what software development and IT teams are already doing toward delivering releases more efficiently through the creation of automation pipelines. Repetitive labor and intensive tasks that are prone to human error are broken down into repeatable processes across a series of stages, from development, through testing, to production and into the hands of the users, confirming that what can be automated does truly get automated.

Thus, certain roles in software engineering are marching toward their obsolescence, as best practices shed people while automations keep the show going. But this has been so in all industries, going so far back as the introduction of the first steam engine, on through to the mechanization of assembly lines. In each case, the automation was not the doing of the laborers. No, it happenedtothem. With the automation in releasing software, the irony is that engineers are the ones imagining it into being. And as designers imagine the constructs of what’s next, it would only be appropriate that their elimination is self-inflicted.

I predict that once we have automated algorithmic tasks for designing software, time will be freed for imagining new solutions and experiences, as we’re currently seeing with the resurgence of VR and the emergence of 360 video content. Automation frees time for the heuristic facets of design to evolve toward crafting experiences for deeper social connectedness, more efficient collaboration and broader creativity.

First, however, there is a pragmatic motivation for eliminating algorithmic design tasks: Speed. That ever-competitive edge. Yet speed to market through speed of execution is often erroneously sought by sacrificing quality. From lack of automation, we drift toward inadequately achieving speed by removing key steps that ensure a better outcome in delivering a quality product.

My former boss would often state: “Waste is sinful,” which I interpreted as time is wasted. Effort is wasted. Conversations are wasted. Talent is wasted. Market opportunity is wasted. Investment is wasted. I go so far as to say life itself is wasted in the inefficiencies of production.

In the case of producing a superior user experience in software, when the vectors of speed and quality are in a tug-of-war, automation can end the war and get both vectors moving in the same direction. From his commission to rebuild Japan’s post-war manufacturing industry, the engineer and professorW. Edwards Demingadmonished: “Cease dependence on mass inspection to achieve quality. Instead, improve the process andbuild quality into the productin the first place.”

In our modern software development organizations, committed to the pursuit of continuous software delivery, Deming’s words may well be the beacon to establishing a design process in which automation removes the inspection from humans, and built-in quality will come directly from AI rendering design solutions relative to a set of parameters.

As a designer of enterprise software, I do not fear the elimination of my labor. I welcome it. I seek to enable it. I desire AI and automation to free me so that I may have the mental availability and the time to project and design the experiences of what’s next.