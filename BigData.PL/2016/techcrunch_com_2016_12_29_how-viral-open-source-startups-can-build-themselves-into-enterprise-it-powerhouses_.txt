How viral open-source startups can build themselves into enterprise-IT powerhouses

In the last several years, hordes of new enterprise-IT upstarts have popped up in Silicon Valley, with some drawing lofty valuations from investors. They’re driven by new, more-advanced technologies in areas such as databases, software development, networking and cloud computing. And many are taking aim at old-school, IT incumbents like Dell, EMC, Oracle and IBM.

But will these new companies ever be as valuable as those big names?

It’s a legitimate question, mainly because of another technology trend that’s driving the current enterprise-IT renaissance: free, “open-source” software. Increasingly, almost all new enterprise-IT companies are incorporating open-source software into their products. They’re responding to demand from the big companies who buy their products, from banks to healthcare companies to consumer-product giants, who now favor open-source because of its lower cost, flexibility and agility. At an event we held this past spring, Goldman Sachs’ technology chief said his bank always considers open-source products first when evaluating new technologies. He even quipped that “open source is eating Goldman Sachs.”

This presents a financial conundrum for enterprise-tech startups, because open-source software is, at its core, free. Companies have to get creative to wring revenue and profits from open-source; they do so by selling more-expensive, feature-rich enterprise versions of their products, or charging for maintenance and service, among other models.

Still, on average, the cost of using an open-source product is three to four times cheaper than its proprietary counterpart. And, aswe wrote earlier this year in TechCrunch, to date there have been very few landmark exits (IPOs or outsized M&A events) involving purely open-source companies — indicating Wall Street may still be skeptical about the business model.

So, can the open-source business modelevercreate the kind of stratospheric market values that the proprietary software and hardware companies of the 1980s and 1990s did? We think the answer is actually yes — for three reasons.

Because open-source software is free and easy to use, it can spread virally through organizations, from the bottom up, in ways that old-style, proprietary software cannot. This is because more-traditional software often requires licenses for specific users upfront. So there’s generally a big, expensive contract signed at the very beginning of an engagement. With open-source, technology gets a free foothold and then sticks around if it proves useful enough for people to pay for it (which is often). Software developers also love tinkering with their tools, which they can easily do with open source.

Open-source startupDocker, which sells “containerization” technology for software developers, is a good example of viral adoption by DevOps engineers, and is gradually loosening the grip more-established vendors likeVMwarehave in some organizations.

Other startups find that their inexpensive, easy-to-implement technology can spread through companies because people find multiple ways to use it once it’s there.InfluxData*, which helps companies store and analyze critical “time-series” data, is an example. Customers are using the company’s products to parse data generated by internet-connected sensors and also to monitor larger IT systems, among other uses. The company’s flexible technology is already in use at 40,000 sites with very little marketing.

This all mirrors current trends in software development inside enterprises, which stress agility, speed and the use of on-demand, low-cost cloud computing. Want to build a new internal software app? Spin up an Amazon Elastic Compute Cloud (EC2) instance. Need a new database to make it work? Download Cassandra from the Web. More often than not, open-source products are being used in these scenarios.

Once open-source technology gains a foothold in an organization, it’s also often easier for startups to sell paid versions of their products to the customer, compared to traditional vendors. This reduces open-source companies’ sales-and-marketing expenses and frees up cash to spend on other things, like creating better products. Or, these savings can flow through to the bottom line and create profits.

Open source is a relatively easier sell than the cumbersome, top-down sales model of proprietary software, for a couple of reasons. First, because the technology is already embedded inside many organizations, many companies deeply depend on open source to run critical software applications. So it becomes easier to sell premium versions of open-source products to these happy users, who don’t want to rip up applications that already work well.

Second, when open-source startupsdohave to make a real sales pitch, it’s much easier to target potential buyers. Startups have reams of information about how customers are already using their products, so tailoring sales pitches for upgrades is far easier than it would be if salespeople were going in cold. Essentially, open-source salespeople can rely on solid lists of pre-qualified leads instead of making cold calls.

Open-source software startupRedis Labs, for instance, has been able to take advantage of its large and growing community of users to sell more enterprise-level, “in-memory” database products.JFrog*, whose popular open-source tools aid with software development and management, also finds plenty of customers willing to pay for more-sophisticated versions of its product. JFrog’s Bintray product already has a billion downloads, many of which can potentially turn into paying customers in the mid-term.

Finally, many open-source companies find they can also run research and development more efficiently, and save R&D dollars, because a broad community of users is continually iterating and improving on open-source products. Big corporate users of open-source software — think Twitter, Facebook — essentially subsidize some of the R&D for the open-source technology they buy because it’s in their interest for the software to run well, and they use it at such scale.

Finally, once companies start using open-source tools — both free and paid — a virtuous cycle of increased usage develops: Because these tools, even the paid ones, are so much cheaper than traditional software, companies use more of them. And this expands the overall market for the technology, helping fuel the creation of ever-bigger open-source vendors.

One good example isElastic, which specializes in analyzing data for enterprises. Elastic’s product is significantly cheaper than larger rival Splunk’s*, meaning customers can run Elastic’s analytics on more of the valuable data they’re generating and collecting. The increased usage — creating a larger total revenue pie for Elastic — makes up for the lower per-unit price of Elastic’s product.

Or consider also open-source database companyMongoDB. Mongosays customers using MongoDB’s Enterprise Advanced productcan, in some cases, save around 70 percent compared with using Oracle’s Enterprise Edition, for instance. So some organizations will use Mongo’s product more extensively, expanding Mongo’s footprint within a company and increasing the company’s net deal size — and revenue. More broadly, this can expand the total addressable market (TAM) for all players in a market.

In sum: The open-source business model is, in many ways, not intuitive. But as open source moves to the mainstream, emerging companies like MongoDB,Clouderaand Elastic are growing quickly and could even tap the public markets soon. Whether Wall Street likes it or not, open-source software has become the de facto delivery model for all types of infrastructure software — and all of tomorrow’s enterprise-IT giants will have to embrace it.

*Denotes a current or past Battery investment.